TODO:

DONE -remove LCD stuff
DONE -change all 1.0 to 1.0f --- to make sure it's 32-bit floats and not 64-bit floats.
DONE -Rename structs/variables so they make more sense
DONE -Put osc.h structs into main.h --> so that user_interface and init_io can write to them and osc can read from them.
DONE -Use buttons to cycle through waveforms - instead of selector.
	initial_io.c		init_push_buttons()
	user_interface.c	update_selector_state()
DONE -turned off pin C2 (volume)

Bug Fixes
DONE -when no VCO waveform is chosen, make it output no sound (instead of that high pitches beep).
DONE -When no LFO waveform is chosen, make sure the VCO still outputs, but with no modulation.
-When LFO modulation type changes from am->fm->etc, make sure output volume doesn't change
DONE -ADSR - when no modulation is chosen, make sure VCO outputs cleanly
-ADSR - make sure it does correct modulation types: am, fm, am+fm, off.
-ADSR - AM modulation sounds noisy - clipping?

	
-Change pins - buttons
	user_interface.c			update_state()
-Change pins - pots

-see if 2nd oscillator will work, now that I'm using proper 32-bit floats.

-make it work with any buffer size.  (Not sure if that works anymore).
-Determine a good buffer length -- less than 0.1 second long, I think.

-make it mono 

	
	
	
====================================
PINS - NEW
====================================

	Buttons
	------------------------
	E0		vco waveform type
	E1		lfo waveform type
	E2		lfo modulation type
	E3		adsr modulation type
	**E4**	Filter on	 - TEST TEST

	Oscillators - Pots
	------------------------
	A1		VCO-Amplitude			ADCBuffer[1]		** NOTE: same pin as pushbutton **
	A0		VCO-Frequency			ADCBuffer[0]	
	
	A2		LFO-Amplitude			ADCBuffer[2]
	A3		LFO-Frequency			ADCBuffer[3]	

	Envelope - Pots
	------------------------
	A5		ENVELOPE-Attack			ADCBuffer[4]
	C1		ENVELOPE-decay			ADCBuffer[9]
	A7		ENVELOPE-Sustain		ADCBuffer[5]
	B0		ENVELOPE-Release		ADCBuffer[6]
	C0		ENVELOPE-BlankLen		ADCBuffer[8]
	C4		ENVELOPE-sustain amp	ADCBuffer[11]
	
	Filter - Pots
	------------------------
	

====================================
PINS - OLD
====================================

	Gain (Maybe)
	------------------------
	C2		VCO-Volume			volume = ADCBuffer[10]
	
	
	Oscillators - Pots
	------------------------
	---> SWAPPED
	A0		VCO-Amplitude			ADCBuffer[1]		** NOTE: same pin as pushbutton **
	A1		VCO-Frequency			ADCBuffer[0]	
	
	A2		LFO-Amplitude			ADCBuffer[2]
	A3		LFO-Frequency			ADCBuffer[3]

	
	Envelope - Pots
	------------------------
	A5		ENVELOPE-Attack			ADCBuffer[4]
	C1		ENVELOPE-decay			ADCBuffer[9]
	A7		ENVELOPE-Sustain		ADCBuffer[5]
	B0		ENVELOPE-Release		ADCBuffer[6]
	C0		ENVELOPE-BlankLen		ADCBuffer[8]
	C4		ENVELOPE-sustain amp	ADCBuffer[11]
	
	Filters - Pots
	------------------------
	B1		FILTER-FreqLow			ADCBuffer[7]		
	DEFUNCT 	C0		FILTER-FreqHigh			ADCBuffer[8]		--> MOVED TO adsr_settings.blank_len	
	DEFUNCT		C4		FILTER-FreqGain			ADCBuffer[12] 		---> moved to ENVELOPE-sustain amp
	
	Waveform Types - Selectors
	------------------------
	PE7 		vco_sine
	PE8			vco_sawtooth
	PE9			vco_square
	PE10		vco_triangle

	PE12 		lfo_sine
	PE13		lfo_sawtooth
	PE14		lfo_square
	PE15		lfo_triangle	
	



======================================================================================	
	A4			volume				ADCBuffer[4]		Do not ground
	B1			fc_low				ADCBuffer[9]		--> MOVED TO adsr_settings.blank_len	
	C0			fc_high				ADCBuffer[10]		GROUNDED
	C1			fc_resonance		ADCBuffer[11]		GROUNDED
		
	

======================================================================================	


													audio_codec.h	
PE7		John	vco_sine							ok
PE8		John	vco_sawtooth						ok
PE9		John	vco_square							ok
PE10	John	vco_other 1 talk to mike			ok
PE11	John	vco_other 2 talk to mike			ok
PE12	John	lfo_sine							ok
PE13	John	lfo_sawtooth						ok
PE14	John	lfo_square							ok
PE15	John	lfo_other 1							ok
	

PC5		John	LCD RS								ok
 //// PC7		John	LCD R/W								** conflict **				#define CODEC_I2S_MCK_PIN              GPIO_Pin_7
PD6		John	LCD R/W
PC8		John	LCD DB0								ok
PC9		John	LCD DB1								ok
PC11	John	LCD DB2								ok
PC13	John	LCD DB3								ok
PC14	John	LCD DB4								ok
PC15	John`	LCD DB5								ok


============================================
PINS FOR AUDIO
============================================
#define CODEC_I2S_WS_PIN               GPIO_Pin_4			A4
#define CODEC_I2C_SCL_PIN              GPIO_Pin_6			B7
#define CODEC_I2C_SDA_PIN              GPIO_Pin_9			B9
#define CODEC_I2S_MCK_PIN              GPIO_Pin_7			C7
#define CODEC_I2S_SCK_PIN              GPIO_Pin_10			C10
#define CODEC_I2S_SD_PIN               GPIO_Pin_12			C12
#define AUDIO_RESET_PIN                GPIO_Pin_4			D4



============================================
IMPORTING JOHN's FILES:
============================================
Copy in:
initial_ization.c
initial_ization.h
lcd.c
lcd.h
stm32f4xx_it.c
stm32f4xx_it.h
user_interface.c
user_interface.h

File Compare:
main.c
main.h




